/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package be.seeseemelk.jxe;

import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.zip.ZipException;
import java.util.zip.ZipFile;

import be.seeseemelk.jxe.discovery.Library;
import be.seeseemelk.jxe.discovery.MethodScanner;
import be.seeseemelk.jxe.rules.PureRule;
import be.seeseemelk.jxe.rules.RuleCheckerMethodException;

public class App
{
	private static Library discover(Path input) throws IOException
	{
		var library = new Library();
		library.discover(input);
		return library;
	}
	
	private static void performChecks(Library library) throws IOException
	{
		var rule = new PureRule();
		
		try
		{
			library.check(rule);
		}
		catch (RuleCheckerMethodException e)
		{
			System.err.format("%n%n");
			System.err.format("%sOops, the code did not validate correctly.%n", ANSI.RED);
			System.err.format("Location: %s%n", e.getPosition());
			System.err.format("%s%s%n%n", e.getMessage(), ANSI.RESET);
			
			if (e.getLongDescription().isPresent())
			{
				String description = e.getLongDescription().get();
				System.err.format("%s%n", description);
			}
			
			System.err.println();
		}
	}
	
	public static void recompile(Path input) throws IOException
	{
		var library = discover(input);
		performChecks(library);
		//var recompiler = new Recompiler(input, Paths.get("../output"));
		//recompiler.recompile();
	}
	
	public static void autoDetectPureness(Path input) throws ZipException, IOException
	{
		try (var zip = new ZipFile(input.toFile()))
		{
			var library = new Library();
			zip.stream()
				.filter(entry -> entry.getName().endsWith(".class"))
				.filter(entry -> !entry.isDirectory())
				.forEach(entry -> {
					try (var inputStream = zip.getInputStream(entry))
					{
						library.discover(input.toString() + ":" + entry.getName(), inputStream);
					}
					catch (IOException e)
					{
						throw new RuntimeException(e);
					}
				});
			
			var scanner = new MethodScanner(library);
		}
		/*.forEach(entry -> {
			System.out.println(entry.getName());
		});*/
	}

	public static void main(String[] args) throws IOException
	{
		if (args.length == 0)
		{
			recompile(Paths.get("../input_class"));
		}
		else if (args.length == 1)
		{
			switch (args[0])
			{
				case "--pure-jar" -> {
					autoDetectPureness(Paths.get("/usr/lib/jvm/java-12-openjdk/jmods/java.base.jmod"));
					//autoDetectPureness(Paths.get("/home/seeseemelk/dev/jxe/input_class.jar"));
				}
			}
		}
		/*if (args.length > 0)
		{
			for (var arg : args)
				recompile(Paths.get(arg));
		}
		else
		{
			
		}*/
	}
}
